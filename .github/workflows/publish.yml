name: Release Builds

on:
  workflow_dispatch:
  pull_request:
    branches: [ 'develop' ]

jobs:
  prepare-all:
    uses: ./.github/workflows/_prepare-all.yml
  prepare-release:
    uses: ./.github/workflows/_prepare-release.yml
  build:
    runs-on: macos-latest # use [ self-hosted, macOS ] to host on our own mac mini, which is twice as fast and cheaper than hosting on a github runner. See README for more info.
    steps:
      - uses: actions/checkout@v4

      # This will decode the keystore from base 64 text representation that we have stored in secrets
      # and generates and keystore file and gets stored in /android-app path
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
        shell: bash
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d <keystore-b64.txt >upload-keystore.jks

      - name: Build Prod Release APK
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleProdRelease --stacktrace

      - name: Upload Release APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ github.run_number }}-prod-release-apk
          path: |
            ${{ github.workspace }}/app/build/outputs/apk/prod/release/app-prod-release.apk

      - name: Upload Prod Release APK to Firebase App Distribution
        uses: nickwph/firebase-app-distribution-action@v1
        with:
          file: ${{ github.workspace }}/app/build/outputs/apk/prod/release/app-prod-release.apk
          app: ${{ secrets.FIREBASE_PROD_APP_ID }}
          credentials: ${{ secrets.FIREBASE_CREDENTIALS }}

      - name: Build Prod Release Bundle
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew bundleProdRelease --stacktrace

      - name: Upload Release Bundle to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ github.run_number }}-prod-release-bundle
          path: |
            ${{ github.workspace }}/app/build/outputs/bundle/prodRelease/app-prod-release.aab
